
rules_version = '2';

service cloud.firestore {
  match /databases/{database}/documents {
    
    // Rules for companyProfiles collection
    match /companyProfiles/{userId} {
      // The owner of the profile can read and write their own document.
      allow read, write: if request.auth != null && request.auth.uid == userId;

      // The owner can also read and write to ANY document in ANY subcollection.
      // This covers 'materials', 'cajaDiaria', 'fuentes', 'collaborators', etc.
      match /{subcollection}/{docId} {
        allow read, write: if request.auth != null && request.auth.uid == userId;
      }
    }
    
    // Rules for the user-to-company mapping
    match /userMappings/{authUid} {
      // The user themselves can read their mapping to find their admin.
      allow get: if request.auth != null && request.auth.uid == authUid;
      
      // An admin can create a mapping for a new collaborator.
      // We check if the 'adminUid' being written in the mapping document
      // matches the person making the request. This prevents a random user
      // from assigning a new collaborator to an admin.
      allow create: if request.auth != null && request.resource.data.adminUid == request.auth.uid;
      
      // No one should update or delete mappings for now to keep it simple.
      allow update, delete: if false;
    }
  }
}
